version: '3.9'
services:
  mongo:
    image: mongo:6
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: sms-reader
    ports:
      - 27017:27017
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo-js:ro
      - mongodb:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

### Ory services

  postgresd:
    image: postgres:9.6
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=kratos
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=kratos
    networks:
      - intranet

  kratos-migrate:
    image: oryd/kratos:v0.11.1
    environment:
      - DSN=postgres://kratos:secret@postgresd:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
    volumes:
      - type: volume
        source: kratos-postgres
        target: /var/lib/postgresql
        read_only: false
      - type: bind
        source: ./kratos/email-password
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    networks:
      - intranet

  kratos-selfservice-ui-node:
    image: oryd/kratos-selfservice-ui-node:v0.11.1
    ports:
      - "4455:4455"
    environment:
      - KRATOS_PUBLIC_URL=http://kratos:4433/
      - KRATOS_BROWSER_URL=http://127.0.0.1:4444/api/kratos/public
      - PORT=4455
      - SECURITY_MODE=
    networks:
      - intranet

  kratos:
    depends_on:
      - kratos-migrate
      - jaeger
    image: oryd/kratos:v0.11.1
    ports:
      - '4433:4433' # public
      - '4434:4434' # admin
    restart: unless-stopped
    environment:
      - DSN=postgres://kratos:secret@postgresd:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
      - TRACING_PROVIDER=jaeger
      - TRACING_PROVIDERS_JAEGER_SAMPLING_SERVER_URL=http://jaeger:5778/sampling
      - TRACING_PROVIDERS_JAEGER_LOCAL_AGENT_ADDRESS=jaeger:6831
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - type: volume
        source: kratos-postgres
        target: /var/lib/postgresql
      - type: bind
        source: ./kratos/email-password
        target: /etc/config/kratos
    networks:
      - intranet

  mailslurper:
    image: oryd/mailslurper:latest-smtps
    ports:
      - '4436:4436'
      - '4437:4437'
    networks:
      - intranet

  keto-migrate:
    image: oryd/keto:v0.10.0-alpha.0
    volumes:
      - type: volume
        source: kratos-postgres
        target: /var/lib/postgresql
        read_only: false
      - type: bind
        source: ./keto
        target: /home/ory
    environment:
      - LOG_LEVEL=debug
      - DSN=postgres://kratos:secret@postgresd:5432/accesscontroldb?sslmode=disable&max_conns=20&max_idle_conns=4
    command: ["migrate", "up", "-y"]
    networks:
      - intranet

  keto:
    image: oryd/keto:v0.10.0-alpha.0
    ports:
      - "4466:4466"
      - "4467:4467"
    depends_on:
      - keto-migrate
      - jaeger
    command: serve
    volumes:
      - type: bind
        source: ./keto/keto.yml
        target: /home/ory/keto.yml
      - type: bind
        source: ./keto/namespaces
        target: /home/ory/namespaces
    environment:
      - TRACING_PROVIDER=jaeger
      - TRACING_PROVIDERS_JAEGER_SAMPLING_SERVER_URL=http://jaeger:5778/sampling
      - TRACING_PROVIDERS_JAEGER_LOCAL_AGENT_ADDRESS=jaeger:6831
    networks:
      - intranet

### Reverse proxy

  nginx:
    image: nginx:1.23.3
    ports:
      - 4444:4444
    volumes:
      - type: bind
        source: ./nginx/nginxconfig.io
        target: /etc/nginx/nginxconfig.io
      - type: bind
        source: ./nginx/sites-available/alertmoon.com.conf
        target: /etc/nginx/sites-available/alertmoon.com.conf
      - type: bind
        source: ./nginx/sites-available/alertmoon.com.conf
        target: /etc/nginx/sites-enabled/alertmoon.com.conf
      - type: bind
        source: ./nginx/nginx.conf
        target: /etc/nginx/nginx.conf
      # - ./ssl:/ssl/
    networks:
      - intranet
      - opensearch-net

### Logging
  jaeger:
    image: jaegertracing/all-in-one:1.40.0
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "14268:14268"
    restart: on-failure
    depends_on:
      - opensearch-node1
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - SPAN_STORAGE_TYPE=opensearch
      - ES_SERVER_URLS=https://opensearch-node1:9200
      - ES_TLS_ENABLED=true
      - ES_TLS_SKIP_HOST_VERIFY=true
      - ES_TAGS_AS_FIELDS_ALL=true
      - ES_USERNAME=admin
      - ES_PASSWORD=admin
    networks:
      - intranet
      - opensearch-net

  # https://github.com/opensearch-project/documentation-website/blob/2.6/assets/examples/docker-compose.yml
  opensearch-node1:
    image: opensearchproject/opensearch:2.6.0
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - discovery.seed_hosts=opensearch-node1
      - cluster.initial_cluster_manager_nodes=opensearch-node1
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data
    ports:
      - "9200:9200" # REST API
      - "9600:9600" # Performance Analyzer
    networks:
      - opensearch-net
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.6.0
    container_name: opensearch-dashboards
    ports:
      - "5601:5601"
    expose:
      - "5601"
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node1:9200"]'
    networks:
      - opensearch-net

networks:
  intranet:
  opensearch-net:
  default:
    external:
      name: sms-reader-backend-net

volumes:
  kratos-postgres:
  mongodb:
  opensearch-data1:
